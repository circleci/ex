version: 2.1

x-data:
  go_versions: &go_versions
    - '1.22'
    - '1.23'
    - '1.24'
    - '1.25'

workflows:
  main:
    jobs:
      - lint:
          matrix:
            parameters:
              go_version: *go_versions
      - test:
          name: test-<< matrix.go_version >>
          matrix:
            parameters:
              go_version: *go_versions
      - release:
          requires:
            - lint
            - test
          filters:
            branches:
              only: main

jobs:

  lint:
    parameters:
      go_version:
        type: string
    docker:
      - image: cimg/go:<<parameters.go_version>>
    resource_class: large
    environment:
      GOMAXPROCS: 4
    steps:
      - checkout
      - setup
      - run:
          name: Check rootcerts is up to date
          command: ./do check-rootcerts
      - run:
          name: Verify modules are tidy
          command: ./do check-gomod
      - run:
          name: Lint
          command: ./do lint-report
      - cleanup

  test:
    parameters:
      go_version:
        type: string
    docker:
      - image: cimg/go:<<parameters.go_version>>
      - image: circleci/postgres:13.5-ram
        environment:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dbname
      - image: cimg/redis:8.2
        command: [
          "redis-server",
          "--protected-mode", "no",
          "--databases", "1000000",
          ]
      - image: rabbitmq:4.1-management-alpine
      - image: mongo:8.0
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: dbname
      - image: minio/minio
        environment:
          MINIO_ROOT_USER: 'minio'
          MINIO_ROOT_PASSWORD: 'minio123'
        command: [
          'server',
          '/data/1','/data/2','/data/3','/data/4',
          '--address', ':9123',
          ]
      - image: minio/minio
        environment:
          MINIO_ROOT_USER: 'minio-nv'
          MINIO_ROOT_PASSWORD: 'minio-nv-123'
        command: [
          'server',
          '/datanv',
          '--address', ':9124',
          ]
      - image: hashicorp/vault:1.20.2
        environment:
          SKIP_SETCAP: skip
          VAULT_DEV_ROOT_TOKEN_ID: dummyroot
      - image: jaegertracing/all-in-one:latest
        environment:
          COLLECTOR_OTLP_ENABLED: true
          LOG_LEVEL: debug

    resource_class: large
    environment:
      GOMAXPROCS: 4
    steps:
      - checkout:
          path: ~/project
      - setup
      - run:
          name: Run tests
          command: ./do test
      - cleanup

  release:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Configure Git
          command: |
            git config --global user.email "eng-execution@circleci.com"
            git config --global user.name "Execution Team"
      - run:
          name: Tag release
          command: ./do release

commands:
  setup:
    steps:
      - run:
          name: Download dependencies
          command: go mod download && (cd tools && go mod download)
      - run:
          name: Adding GOPATH bin to PATH
          command: echo 'export PATH="$PATH:$(go env GOPATH)/bin"' >> "$BASH_ENV"
      - run:
          name: Install devtools
          command: ./do install-devtools
      - run:
          name: install protobuf binaries
          command: |
            mkdir -p /tmp/protoc
            cd /tmp/protoc

            wget https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protoc-3.19.4-linux-x86_64.zip
            unzip protoc*.zip
            sudo mv bin/protoc /usr/local/bin/
            sudo mv include/google /usr/local/include
      - run:
          name: Make test-reports dir
          command: mkdir -p test-reports

  cleanup:
    steps:
      - store_artifacts:
          path: test-reports
      - store_test_results:
          path: test-reports

